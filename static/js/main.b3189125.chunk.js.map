{"version":3,"sources":["img/noIcon.jpg","img/silver_3.png","Components/Loader.js","Components/RotateSection.js","Routes/Main/MainPresenter.js","apiRequest.js","Routes/Main/index.js","Routes/Main/MainContainer.js","Components/Section.js","Components/Match.js","Routes/Summoner/SummonerPresenter.js","Routes/Summoner/index.js","Routes/Summoner/SummonerContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","role","aria-label","Title","span","Grid","RotateSection","title","children","Form","form","Input","input","MainPresenter","rotateChampArr","loading","searchTerm","handleSubmit","updateTerm","error","Loader","onSubmit","type","placeholder","maxLength","value","onChange","length","map","index","key","className","apiRequest","axios","create","baseURL","getChamp","get","getUserInfo","term","MainContainer","state","summonerData","isLoaded","e","console","log","preventDefault","searchByTerm","a","setState","data","props","history","push","target","champList","chgArr","JSON","parse","this","React","Component","Section","Backdrop","bgColor","Content","GameDivider","GameType","h3","GameChamp","GameChampInfo","ChampImgArea","ChampImg","img","SummonerSpell","Spell","SummonerRune","Rune","ChampionName","KDA","Stat","GameItem","GameItemList","Item","WithPlayer","getInGameItem","allData","t","i","Object","keys","startsWith","values","urlArr","url","Match","id","win","queueId","diffDate_1","Date","diffDate_2","getFullYear","getMonth","getDate","diff","Math","abs","getTime","ceil","getGameDate","matchInfo","gameCreation","duration","parseInt","seconds","minutes","hours","msToTime","gameDuration","src","alt","championId","kills","deaths","assists","toFixed","cnt","totalCnt","getMultiKilled","largestMultiKill","totalMinionsKilled","neutralMinionsKilled","totalCS","msPerCS","visionWardsBoughtInGame","wardsPlaced","wardsKilled","blue","player","href","SummonerName","red","UserSection","Cover","bgImage","UserContent","SummonerID","ItemContaitner","MatchSection","UsedChampSection","SoloRankSection","SoloImgSection","SoloInfoSection","RankType","UserMatchSection","SummonerPresenter","matchData","profileIconImage","require","name","sol_tier","sol_rank","sol_leaguePoints","sol_wins","sol_losses","match","summonerName","SummonerContainer","location","pathname","summoner","Header","header","List","ul","li","current","SLink","Link","withRouter","to","path","exact","component","Main","Summoner","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3189125.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noIcon.9b4fd0eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/silver_3.180877e8.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n//vh viewport height, vw viewport width \r\nconst Container = styled.div`\r\n    height : 100vh;    \r\n    width : 100vw;\r\n    display : flex; \r\n    justify-content: center;\r\n    font-size : 32px;\r\n    margin-top : 20px;\r\n`;\r\n\r\nexport default () => (\r\n<Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n        ♬\r\n    </span>\r\n</Container>)\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    margin-top : 30px;\r\n    :not(:last-child){\r\n        margin-bottom : 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size : 16px;\r\n    font-weight : 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill,82px);\r\n    grid-gap: 5px;\r\n    margin-left: 85px;\r\n`;\r\n\r\n//children 은 react prop\r\n\r\nconst RotateSection = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nRotateSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.array\r\n    //children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n}\r\n\r\nexport default RotateSection;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"Components/Loader\";\r\nimport RotateSection from \"Components/RotateSection\";\r\nimport \"Components/RotateChampList.css\";\r\n\r\n\r\nconst Container = styled.div`\r\n    padding-top : 50px;\r\n    text-align : center;\r\n`;\r\nconst Form = styled.form`\r\n    margin-bottom : 50px;\r\n    \r\n    position: relative;\r\n    -webkit-box-flex: 0;\r\n    -ms-flex-positive: 0;\r\n    flex-grow: 0;\r\n    z-index: 4;\r\n    height: 50px;\r\n    margin: 0 auto;\r\n    border-radius: 2px;\r\n    background-color: #fff;\r\n    margin-top: 20px;\r\n    width : 500px;\r\n\r\n    @media only screen and (max-width:520px)\r\n    {\r\n        width: 450px;\r\n    }\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all : unset;\r\n    font-size : 28px;\r\n    width : 100%;\r\n    color : black;\r\n`;\r\n\r\nconst MainPresenter = ({ rotateChampArr, loading, searchTerm, handleSubmit, error, updateTerm }) => loading ? \r\n<Loader /> \r\n    : \r\n<Container>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input type=\"text\" placeholder=\"Search..\" maxLength=\"30\" value={searchTerm} onChange={updateTerm} />\r\n    </Form>\r\n    {rotateChampArr && rotateChampArr.length > 0 && (\r\n        <RotateSection title=\"RotateChamp\">\r\n            {rotateChampArr.map((value, index) => <div key={index} className={'rotateChampArea champImg i'+value}>{value}</div>)}\r\n        </RotateSection>\r\n    )}\r\n      \r\n</Container>;\r\n\r\nMainPresenter.propTypes = {\r\n    rotateChampArr : PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    handleSubmit : PropTypes.func.isRequired,\r\n    updateTerm : PropTypes.func.isRequired\r\n}\r\nexport default MainPresenter;\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nconst apiRequest = axios.create({\r\n    baseURL : \"http://61.74.252.142:8000/api/\",\r\n    //baseURL : \"http://203.227.22.137:8000/api/\"\r\n    //http://203.227.22.137:8000/api/matchinfo/list/summoner/%ED%83%80%EC%9E%94\r\n    //http://61.74.252.142:8000/api/matchinfo/list/summoner/%EC%8A%88%ED%8D%BC%ED%9C%B4%EB%A8%BC\r\n});\r\n\r\n// export const getRotate = () => {\r\n//     console.log(\"request!!\");\r\n//     apiRequest.get();\r\n// }\r\n\r\nexport const getChamp = {\r\n    getRotate : () => apiRequest.get(\"champion/rotation\")\r\n}\r\n\r\nexport const getUserInfo = {\r\n    getSummoner : (term) => apiRequest.get(\"matchinfo/list/summoner/\"+term)\r\n    //getSummoner : (term) => apiRequest.get(\"champion/rotation\")\r\n}","import MainContainer from \"./MainContainer\";\r\n\r\nexport default MainContainer;","import React from \"react\";\r\nimport MainPresenter from \"./MainPresenter\";\r\nimport { getChamp } from \"apiRequest\";\r\nimport { getUserInfo } from \"apiRequest\";\r\n\r\nclass MainContainer extends React.Component{\r\n    state = {\r\n        loading : true,\r\n        rotateChampArr : null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        summonerData : null,\r\n        isLoaded : false\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        console.log(\"handleSubmit : \", e);\r\n        e.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\"){\r\n            console.log(\"11111111111111111111111\");\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n\r\n    searchByTerm = async(term) =>{\r\n        try {\r\n            this.setState({\r\n                loading : true\r\n            })\r\n            const {data : {data : summonerData}} = await getUserInfo.getSummoner(term);\r\n            \r\n            this.props.history.push(\"/summoner\", summonerData);\r\n        } catch {\r\n            this.setState({\r\n                error : \"Can't find results..\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading : false\r\n            })\r\n        }\r\n    }\r\n\r\n    updateTerm = (e) => {\r\n        const { target : { value } } = e;\r\n        //console.log(value);\r\n        this.setState({searchTerm : value});\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            \r\n            const {data :{ data : {champList : rotateChampArr } } } = await getChamp.getRotate();\r\n            const chgArr = JSON.parse(rotateChampArr);\r\n            this.setState({rotateChampArr : chgArr});\r\n\r\n        } catch {\r\n            this.setState({loading : false});\r\n        } finally {\r\n            this.setState({loading : false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { loading, rotateChampArr, error, searchTerm, isLoaded, summonerData } = this.state;\r\n        console.log(\"MainState : \", this.state);\r\n        return <MainPresenter \r\n            rotateChampArr={rotateChampArr} \r\n            loading={loading}  \r\n            error={error}\r\n            searchTerm={searchTerm}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            isLoaded={isLoaded}\r\n            summonerData={summonerData}>\r\n        </MainPresenter>;\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom : 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size : 16px;\r\n    font-weight : 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill,100%);\r\n    grid-gap: 20px;\r\n`;\r\n\r\n//children 은 react prop\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{ title }</Title>\r\n        <Grid>{ children }</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    width : 100%;\r\n    position : relative;\r\n    padding : 10px;\r\n`;\r\n//background-image : url(${props => `https://image.tmdb.org/t/p/w300${props.bgUrl}`});#a3cfec filter : blur(3px);opacity : 0.5;\r\nconst Backdrop = styled.div`\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0; \r\n    width : 100%;\r\n    height : 100%;\r\n    background-color: ${props => props.bgColor ===\"true\" ? \"#a3cfec\" : \"#e2b6b3\"};\r\n    z-index : 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display : flex; \r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\nconst GameDivider = styled.div`\r\n    z-index : 1;\r\n    padding-left: 10px;\r\n`;\r\nconst GameType = styled.h3`\r\n    font-size: 12px;\r\n    color: black;\r\n    margin-bottom: 10px;\r\n    z-index: 1;\r\n`;\r\nconst GameChamp = styled.div`\r\n    width: 140px;\r\n    font-size: 0;\r\n    padding-top: 20px;\r\n    padding-left: 10px;\r\n    z-index: 1;\r\n`;\r\nconst GameChampInfo = styled.div`\r\n    padding-left: 15px;\r\n    z-index: 1;\r\n`;\r\nconst ChampImgArea = styled.div`\r\n    display: inline-block;\r\n    width: 46px;\r\n    height: 46px;\r\n    vertical-align: middle;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    z-index: 1;\r\n`;\r\nconst ChampImg = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #000;\r\n    z-index: 1;\r\n`;\r\nconst SummonerSpell = styled.div`\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-left: 4px;\r\n`;\r\nconst Spell = styled.div`\r\n    display: block;\r\n    width: 22px;\r\n    height: 22px;\r\n    margin-top: 2px;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n`;\r\nconst SummonerRune = styled.div`\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-left: 4px;\r\n`;\r\nconst Rune = styled.div`\r\n    width: 22px;\r\n    height: 22px;\r\n`;\r\nconst ChampionName = styled.div`\r\n    margin-top: 8px;\r\n    font-size: 11px;\r\n    color: #555;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    z-index : 1;\r\n`;\r\nconst KDA = styled.div`\r\n    display: table-cell;\r\n    height: 96px;\r\n    vertical-align: middle;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    z-index: 1;\r\n    width : 80px;\r\n    padding-top: 10px;\r\n    color : black;\r\n    div{\r\n        padding-top: 10px;\r\n    }\r\n`;\r\n\r\nconst Stat = styled.div`\r\nwidth: 90px;\r\n    font-size: 11px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    padding-left: 20px;\r\n    color: #555e5e;\r\n    z-index: 1;\r\n`;\r\n\r\nconst GameItem = styled.div`\r\ndisplay: table-cell;\r\n    height: 96px;\r\n    vertical-align: middle;\r\n    padding-top: 20px;\r\n    padding-left: 20px;\r\n     z-index: 1;\r\n`;\r\nconst GameItemList = styled.div`\r\nwidth: 96px;\r\nmargin: 0 auto;\r\n`;\r\nconst Item = styled.div`\r\ndisplay: inline-block;\r\n    width: 22px;\r\n    height: 22px;\r\n    border-radius: 3px;\r\n    margin-top: 2px;\r\n    margin-right: 2px;\r\n    overflow: hidden;\r\n    img{\r\n        width: 100%;\r\n    height: 100%;\r\n    }\r\n`;\r\n\r\nconst WithPlayer = styled.div`\r\nwidth: 300px;\r\n    font-size: 0;\r\n    padding-left: 20px;\r\n    z-index: 1;\r\ndiv{\r\n    float: left;\r\n    width: 50%;\r\n    div{\r\n        display: block;\r\n    width: 80px;\r\n    height: 25px;\r\n    margin-left: 3px;\r\n    padding-top: 3px;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n        img{\r\n            width: 20px;\r\n        }\r\n        div{\r\n            padding-left : 22px;\r\n            font-size : 13px;\r\n            color : black;\r\n            margin-top: -20px;\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst Match = ({ id, win, data }) => (\r\n<Container>\r\n    <Backdrop bgColor={`${win}`}></Backdrop>\r\n    <Content>\r\n        <GameDivider>\r\n            <GameType> {data.queueId === 420 ? \"솔로랭크\" : data.queueId === 440 ? \"자유랭크\" : \"일반게임\"}</GameType>\r\n            <GameType> {getGameDate(data.matchInfo.gameCreation)}일 전</GameType>\r\n            <GameType>----------</GameType>\r\n            <GameType> {win ? \"승리\" : \"패배\"}</GameType>\r\n            <GameType>{ msToTime(data.matchInfo.gameDuration*1000) }</GameType>\r\n        </GameDivider>\r\n        <GameChamp>\r\n            <GameChampInfo>\r\n                <ChampImgArea>\r\n                    <ChampImg src=\"../img/testC.png\" alt=\"champ\"></ChampImg>\r\n                </ChampImgArea>\r\n                <SummonerSpell>\r\n                    <Spell><img src=\"../img/testSpell.png\" alt=\"spell1\" /></Spell>\r\n                    <Spell><img src=\"../img/testSpell.png\" alt=\"spell2\" /></Spell>\r\n                </SummonerSpell>\r\n                <SummonerRune>\r\n                    <Rune><img src=\"../img/testRune.png\" alt=\"rune1\" /></Rune>\r\n                    <Rune><img src=\"../img/testRune.png\" alt=\"rune2\" /></Rune>\r\n                </SummonerRune>\r\n                <ChampionName>{data.championId}</ChampionName>\r\n            </GameChampInfo>\r\n        </GameChamp>\r\n        <KDA>\r\n            <div>\r\n                <span>{data.kills}</span> / <span className=\"text-red\">{data.deaths}</span> / <span>{data.assists}</span>\r\n            </div>\r\n            <div>\r\n                <span>{((data.kills + data.assists)/data.deaths).toFixed(2)}</span> 평점\r\n            </div>\r\n            <div>{getMultiKilled(data.largestMultiKill)}</div>\r\n        </KDA>\r\n        <Stat>\r\n            <div>킬관여 <b>%</b></div>\r\n            <div>CS <b>{data.totalMinionsKilled + data.neutralMinionsKilled}</b> ({msPerCS((data.matchInfo.gameDuration*1000), (data.totalMinionsKilled + data.neutralMinionsKilled)).toFixed(1)}/m)</div>\r\n            <div className=\"match-history__match__stats__wards\">\r\n                <div className=\"d-inline-block tooltip tooltipstered\">\r\n                    <img src=\"https://poro.gg/images/icon/ward-control.svg\" alt=\"제어와드 구매 수\"></img>\r\n                        <span>{data.visionWardsBoughtInGame}</span>\r\n                </div>\r\n                <div className=\"d-inline-block tooltip tooltipstered\">\r\n                    <img src=\"https://poro.gg/images/icon/ward-normal.svg\" alt=\"와드 설치 수\"></img> \r\n                        <span>{data.wardsPlaced}</span>\r\n                </div>\r\n                <div className=\"d-inline-block tooltip tooltipstered\">\r\n                    <img src=\"https://poro.gg/images/icon/ward-delete.svg\" alt=\"와드 파괴 수\"></img> \r\n                        <span>{data.wardsKilled}</span>\r\n                </div>\r\n            </div>\r\n        </Stat>\r\n\r\n        <GameItem className=\"match-history__match__column match-history__match__items\">\r\n                    <GameItemList>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[0] != \"\" ? <img src={getInGameItem(data)[0]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                        </Item>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[1] != \"\" ? <img src={getInGameItem(data)[1]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                        </Item>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[2] != \"\" ? <img src={getInGameItem(data)[2]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                        </Item>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[6] != \"\" ? <img src={getInGameItem(data)[6]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                        </Item>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[3] != \"\" ? <img src={getInGameItem(data)[3]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                        </Item>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[4] != \"\" ? <img src={getInGameItem(data)[4]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                            \r\n                        </Item>\r\n                        <Item className=\"match-history__match__item tooltip tooltipstered\">\r\n                            {getInGameItem(data)[5] != \"\" ? <img src={getInGameItem(data)[5]} alt=\"처형인의 대검\"></img> : \"\"}\r\n                        </Item>\r\n                    </GameItemList>\r\n            </GameItem>\r\n            <WithPlayer>\r\n                <div>\r\n                    {data.matchInfo.blue.player.map(player => (\r\n                        <div key={player.id}>\r\n                            <a href=\"https://poro.gg/ko/s/kr/t%EC%9C%BCt\" target=\"_blank\">\r\n                            <img src=\"http://ddragon.leagueoflegends.com/cdn/10.3.1/img/champion/Mordekaiser.png\" alt=\"모데카이저\" className=\"match-history__match__fellow__champion tooltip tooltipstered\"></img>\r\n                            <div className=\"match-history__match__fellow__name\">{player.SummonerName}</div>\r\n                            </a>\r\n                        </div>))}\r\n                </div>\r\n                <div>\r\n                        {data.matchInfo.red.player.map(player => (\r\n                        <div key={player.id}>\r\n                            <a href=\"https://poro.gg/ko/s/kr/t%EC%9C%BCt\" target=\"_blank\">\r\n                            <img src=\"http://ddragon.leagueoflegends.com/cdn/10.3.1/img/champion/Mordekaiser.png\" alt=\"모데카이저\" className=\"match-history__match__fellow__champion tooltip tooltipstered\"></img>\r\n                                <div className=\"match-history__match__fellow__name\">{player.SummonerName}</div>\r\n                            </a>\r\n                        </div>))}\r\n                    </div>\r\n            </WithPlayer>\r\n    </Content>\r\n</Container>\r\n);\r\n\r\nfunction getInGameItem(allData){\r\n    var t = [];\r\n    for(var i in Object.keys(allData)){\r\n         if(Object.keys(allData)[i].startsWith(\"item\")){\r\n             t.push(Object.values(allData)[i]);\r\n         }\r\n     }\r\n     var urlArr = [];\r\n     if(t.length > 0){\r\n         for(var i in t){\r\n             var url = t[i] != 0 ? \"http://ddragon.leagueoflegends.com/cdn/10.3.1/img/item/\"+t[i]+\".png\" : \"\";\r\n             urlArr.push(url);\r\n         }\r\n     }\r\n     console.log(urlArr);\r\n     return urlArr;\r\n     \r\n}\r\nfunction msPerCS(duration, totalCS){\r\n    var milliseconds = parseInt((duration%1000)/100)\r\n    , seconds = parseInt((duration/1000)%60)\r\n    , minutes = parseInt((duration/(1000*60))%60)\r\n    , hours = parseInt((duration/(1000*60*60))%24);\r\n\r\n    return totalCS/((hours*60) + (minutes) + (seconds/60));\r\n}\r\n\r\nfunction getGameDate(t){\r\n    var diffDate_1 = t instanceof Date ? t :new Date(t);\r\n    var diffDate_2 = new Date();\r\n \r\n    diffDate_1 =new Date(diffDate_1.getFullYear(), diffDate_1.getMonth()+1, diffDate_1.getDate());\r\n    diffDate_2 =new Date(diffDate_2.getFullYear(), diffDate_2.getMonth()+1, diffDate_2.getDate());\r\n \r\n    var diff = Math.abs(diffDate_2.getTime() - diffDate_1.getTime());\r\n    diff = Math.ceil(diff / (1000 * 3600 * 24));\r\n\r\n    return diff;\r\n}\r\nfunction msToTime(duration) {\r\n    var milliseconds = parseInt((duration%1000)/100)\r\n        , seconds = parseInt((duration/1000)%60)\r\n        , minutes = parseInt((duration/(1000*60))%60)\r\n        , hours = parseInt((duration/(1000*60*60))%24);\r\n\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n    if(hours != 0){\r\n        hours = (hours < 10) ? \"0\" + hours : hours;\r\n        return hours + \"시간 \" + minutes + \"분 \" + seconds + \"초\"\r\n    }else{\r\n        return minutes + \"분 \" + seconds + \"초 \"\r\n    }\r\n    return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\r\n}\r\n\r\nfunction getMultiKilled(cnt){\r\n    var totalCnt;\r\n    if(cnt === 2){\r\n        totalCnt = \"더블킬\";\r\n    }else if(cnt === 3){\r\n        totalCnt = \"트리플킬\";\r\n    }else if(cnt === 4){\r\n        totalCnt = \"쿼드라킬\";\r\n    }else if(cnt === 5){\r\n        totalCnt = \"펜타킬\";\r\n    }else{\r\n        totalCnt = '';\r\n    }\r\n\r\n    return totalCnt;\r\n}\r\n\r\nMatch.propTypes = {\r\n    id : PropTypes.string.isRequired,\r\n    win : PropTypes.bool.isRequired,\r\n    data : PropTypes.object\r\n}\r\n\r\nexport default Match;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Match from \"Components/Match\";\r\n\r\nconst Container = styled.div`\r\n    height : calc(100vh - 50px);\r\n    width : 100%;\r\n    position : relative;\r\n    padding : 50px;\r\n`;\r\nconst UserSection = styled.div`\r\nposition : absolute;\r\n    top : 0;\r\n    left : 0; \r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\nconst Content = styled.div`\r\n    display : flex; \r\n    width : 100%;\r\n    height : 25%;\r\n`;\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    height: 100%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position : center center;\r\n    background-repeat: no-repeat;\r\n    background-size: 120px 120px;\r\n    border-radius : 5px;\r\n    z-index : 1;\r\n`;\r\n\r\nconst UserContent = styled.div`\r\n    width: 70%;\r\n    height: 100%;\r\n`;\r\n\r\nconst SummonerID = styled.div`\r\n    padding-top: 30px;\r\n    font-size: 30px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    padding-top: 10px;\r\n    font-size: 15px;\r\n`;\r\nconst ItemContaitner = styled.div``;\r\nconst MatchSection = styled.div`\r\npadding: 20px;`;\r\nconst UsedChampSection = styled.div`\r\n    width: 30%;\r\n    position: absolute;\r\n    height: 100%;\r\n    // background-color: white;\r\n`;\r\nconst SoloRankSection = styled.div`\r\n    width: 100%;\r\n    height: 160px;\r\n    border: 3px solid red;\r\n    margin-top: 40px;\r\n    background-color: white;\r\n`;\r\nconst SoloImgSection = styled.div`\r\nwidth: 50%;\r\nfloat: left;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 160px;\r\n    background-color: white;\r\n    background-image : url(${props => props.bgImage});\r\n    height: 100%;\r\n`;\r\nconst SoloInfoSection = styled.div`\r\n    width: 50%;\r\n    float: left;\r\n    height: 100%;\r\n`;\r\nconst RankType = styled.div`\r\n    width: 180px;\r\n    height: 20%;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    padding-top: 30px;\r\n    text-align: center;\r\n    color: black;\r\n`;\r\n\r\nconst UserMatchSection = styled.div`\r\nfloat: right;\r\nwidth: 65%;\r\n`;\r\nconst SummonerPresenter = ({summonerData, matchData, error, loading}) => loading ? <Loader /> : <Container>\r\n    <UserSection>\r\n        <Content>\r\n            <Cover bgImage={summonerData.profileIconImage ? require(\"../../img/noIcon.jpg\") : require(\"../../img/noIcon.jpg\")}></Cover>\r\n            <UserContent>\r\n                <ItemContaitner>\r\n                    <SummonerID><span>{summonerData.name}</span></SummonerID>\r\n                    <Item><span>레더랭킹</span></Item>\r\n                    <Item><span>{summonerData.name}</span></Item>\r\n                    <Item><span>{summonerData.name}</span></Item>\r\n                </ItemContaitner>\r\n            </UserContent>\r\n        </Content>\r\n        <MatchSection>\r\n            <UsedChampSection>\r\n                <SoloRankSection>\r\n                    <SoloImgSection bgImage={require(\"../../img/silver_3.png\")}></SoloImgSection>\r\n                    <SoloInfoSection>\r\n                        <RankType>솔로랭크</RankType>\r\n                        <RankType>{summonerData.sol_tier} {summonerData.sol_rank}</RankType>\r\n                        <RankType>\r\n                        <span>{summonerData.sol_leaguePoints} LP  </span>\r\n                                <span>{summonerData.sol_wins}승 / {summonerData.sol_losses}패</span>\r\n                        </RankType>\r\n                    </SoloInfoSection>\r\n                </SoloRankSection>\r\n                <SoloRankSection>\r\n                    <SoloImgSection bgImage={require(\"../../img/silver_3.png\")}></SoloImgSection>\r\n                    <SoloInfoSection>\r\n                        <RankType>자유 5:5랭크</RankType>\r\n                        <RankType>{summonerData.sol_tier} {summonerData.sol_rank}</RankType>\r\n                        <RankType>\r\n                        <span>{summonerData.sol_leaguePoints} LP  </span>\r\n                                <span>{summonerData.sol_wins}승 / {summonerData.sol_losses}패</span>\r\n                        </RankType>\r\n                    </SoloInfoSection>\r\n                </SoloRankSection>\r\n            </UsedChampSection>\r\n            <UserMatchSection>\r\n                <Section title=\"matchInfo\">\r\n                    {matchData.map(match => (<Match \r\n                                        key={match.id } \r\n                                        id={ match.summonerName } \r\n                                        win = { match.win }\r\n                                        data = { match }\r\n                                       />))}\r\n                </Section>\r\n            </UserMatchSection>\r\n        </MatchSection>\r\n    </UserSection>\r\n</Container>;\r\n\r\nSummonerPresenter.propTypes = {\r\n    summonerData : PropTypes.object,\r\n    matchData: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n    // `https://image.tmdb.org/t/p/original${summonerData.profileIconImage}` :  require(\"../../img/noIcon.jpg\")} />\r\n}\r\n\r\nexport default SummonerPresenter;\r\n\r\n\r\n","import SummonerContainer from \"./SummonerContainer\";\r\n\r\nexport default SummonerContainer;","import React from \"react\";\r\nimport SummonerPresenter from \"./SummonerPresenter\";\r\n\r\nclass SummonerContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {location : { pathname }} = props;\r\n        console.log(\"summoner : \", props);\r\n        this.state = {\r\n            summonerData : props.location.state.summoner,\r\n            matchData : props.location.state.match,\r\n            error: null,\r\n            loading: true\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading : false});\r\n    }\r\n    \r\n    render(){\r\n        const {summonerData, matchData, error, loading} = this.state;\r\n        return <SummonerPresenter summonerData={summonerData} matchData={matchData} error={error} loading={loading} />\r\n    }\r\n}\r\n\r\nexport default SummonerContainer;","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    \r\n    background-color: rgba(20, 20, 20, 0.5);\r\n    z-index: 10;\r\n    back-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8); \r\n`;\r\n\r\nconst List = styled.ul`\r\n    display : flex;\r\n    &:hover{\r\n        background-color : black;\r\n    }\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:80px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition: border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`;\r\nexport default withRouter(({location : {pathname}}) => (\r\n    <Header>\r\n        {console.log(pathname)}\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">홈</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/champAnalyze\"}>\r\n                <SLink to=\"/champAnalyze\">챔피언분석</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/statistic\"}>\r\n                <SLink to=\"/statistic\">통계</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/ranking\"}>\r\n                <SLink to=\"/ranking\">랭킹</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/community\"}>\r\n                <SLink to=\"/community\">커뮤니티</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n\r\n\r\n// const HeaderC = (props) => (\r\n//         <Header>\r\n//             <List>\r\n//                 <Item current={true}>\r\n//                     <SLink to=\"/\">Movies</SLink>\r\n//                 </Item>\r\n//                 <Item current={true}>\r\n//                     <SLink to=\"/tv\">TV</SLink>\r\n//                 </Item>\r\n//                 <Item current={true}>\r\n//                     <SLink to=\"/search\">Search</SLink>\r\n//                 </Item>\r\n//             </List>\r\n//         </Header>\r\n \r\n// );\r\n\r\n// export default withRouter(HeaderC);    //withRouter를 삭제하면 (export default HeaderC; ) props가 없어짐.. ","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Main from \"Routes/Main\";\r\nimport Summoner from \"Routes/Summoner\"\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main}/>\r\n                <Route path=\"/summoner\" component={Summoner} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${ reset };\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-size:14px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component{\n  render() {\n    return(\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"apiRequest\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}